/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/form-summernote.init.js":
/*!****************************************************!*\
  !*** ./resources/js/pages/form-summernote.init.js ***!
  \****************************************************/
/***/ (() => {

eval("/*\r\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\r\nAuthor: CoderThemes\r\nWebsite: https://coderthemes.com/\r\nContact: support@coderthemes.com\r\nFile: Summernote init js\r\n*/\n\n!function ($) {\n  \"use strict\";\n\n  var Summernote = function Summernote() {\n    this.$body = $(\"body\");\n  };\n\n  /* Initializing */\n  Summernote.prototype.init = function () {\n    $('#summernote-basic').summernote({\n      placeholder: 'Write something...',\n      height: 230,\n      callbacks: {\n        // fix broken checkbox on link modal\n        onInit: function onInit(e) {\n          var editor = $(e.editor);\n          editor.find('.custom-control-description').addClass('custom-control-label').parent().removeAttr('for');\n        }\n      }\n    });\n    // air mode on\n    $('#summernote-airmode').summernote({\n      airMode: true,\n      callbacks: {\n        // fix broken checkbox on link modal\n        onInit: function onInit(e) {\n          var editor = $(e.editor);\n          editor.find('.custom-control-description').addClass('custom-control-label').parent().removeAttr('for');\n        }\n      }\n    });\n\n    // click to edit\n    var edit = function edit() {\n      $('#summernote-editmode').summernote({\n        focus: true,\n        callbacks: {\n          // fix broken checkbox on link modal\n          onInit: function onInit(e) {\n            var editor = $(e.editor);\n            editor.find('.custom-control-description').addClass('custom-control-label').parent().removeAttr('for');\n          }\n        }\n      });\n    };\n    var save = function save() {\n      var makrup = $('#summernote-editmode').summernote('code');\n      $('#summernote-editmode').summernote('destroy');\n    };\n    $('#summernote-edit').on('click', function () {\n      edit();\n      // toggle buttons\n      $(this).hide();\n      $('#summernote-save').show();\n    });\n    $('#summernote-save').on('click', function () {\n      save();\n      // toggle buttons\n      $(this).hide();\n      $('#summernote-edit').show();\n    });\n\n    // Hint\n    $(\"#summernote-hint\").summernote({\n      height: 230,\n      toolbar: false,\n      placeholder: 'type with apple, orange, watermelon and lemon',\n      hint: {\n        words: ['apple', 'orange', 'watermelon', 'lemon'],\n        match: /\\b(\\w{1,})$/,\n        search: function search(keyword, callback) {\n          callback($.grep(this.words, function (item) {\n            return item.indexOf(keyword) === 0;\n          }));\n        }\n      }\n    });\n\n    // Hint for emoji\n    $.ajax({\n      url: 'https://api.github.com/emojis',\n      async: false\n    }).then(function (data) {\n      window.emojis = Object.keys(data);\n      window.emojiUrls = data;\n    });\n    ;\n    $(\"#summernote-emoji\").summernote({\n      height: 180,\n      toolbar: false,\n      placeholder: 'type starting with : and any alphabet',\n      hint: {\n        match: /:([\\-+\\w]+)$/,\n        search: function search(keyword, callback) {\n          callback($.grep(emojis, function (item) {\n            return item.indexOf(keyword) === 0;\n          }));\n        },\n        template: function template(item) {\n          var content = emojiUrls[item];\n          return '<img src=\"' + content + '\" width=\"20\" /> :' + item + ':';\n        },\n        content: function content(item) {\n          var url = emojiUrls[item];\n          if (url) {\n            return $('<img />').attr('src', url).css('width', 20)[0];\n          }\n          return '';\n        }\n      }\n    });\n\n    // Hint for mentions\n    $(\"#summernote-hint-mentions\").summernote({\n      height: 100,\n      toolbar: false,\n      hint: {\n        mentions: ['jayden', 'sam', 'alvin', 'david'],\n        match: /\\B@(\\w*)$/,\n        search: function search(keyword, callback) {\n          callback($.grep(this.mentions, function (item) {\n            return item.indexOf(keyword) == 0;\n          }));\n        },\n        content: function content(item) {\n          return '@' + item;\n        }\n      }\n    });\n  },\n  //init Summernote\n  $.Summernote = new Summernote(), $.Summernote.Constructor = Summernote;\n}(window.jQuery),\n//initializing Summernote\nfunction ($) {\n  \"use strict\";\n\n  $.Summernote.init();\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/form-summernote.init.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/form-summernote.init.js"]();
/******/ 	
/******/ })()
;