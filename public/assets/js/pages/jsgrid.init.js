/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/jsgrid.init.js":
/*!*******************************************!*\
  !*** ./resources/js/pages/jsgrid.init.js ***!
  \*******************************************/
/***/ (() => {

eval("/*\r\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\r\nAuthor: CoderThemes\r\nWebsite: https://coderthemes.com/\r\nContact: support@coderthemes.com\r\nFile: Jsgrid init js\r\n*/\n\n/**\r\n * JsGrid Controller\r\n */\n\nvar JsDBSource = {\n  loadData: function loadData(filter) {\n    console.log(filter);\n    var d = $.Deferred();\n    $.ajax({\n      type: \"GET\",\n      url: \"../assets/data/jsgrid.json\",\n      data: filter,\n      success: function success(response) {\n        //static filter on frontend side, you should actually filter data on backend side\n        var filtered_data = $.grep(response, function (client) {\n          return (!filter.Name || client.Name.indexOf(filter.Name) > -1) && (!filter.Age || client.Age === filter.Age) && (!filter.Address || client.Address.indexOf(filter.Address) > -1) && (!filter.Country || client.Country === filter.Country);\n        });\n        d.resolve(filtered_data);\n      }\n    });\n    return d.promise();\n  },\n  insertItem: function insertItem(item) {\n    return $.ajax({\n      type: \"POST\",\n      url: \"../assets/data/jsgrid.json\",\n      data: item\n    });\n  },\n  updateItem: function updateItem(item) {\n    return $.ajax({\n      type: \"PUT\",\n      url: \"../assets/data/jsgrid.json\",\n      data: item\n    });\n  },\n  deleteItem: function deleteItem(item) {\n    return $.ajax({\n      type: \"DELETE\",\n      url: \"../assets/data/jsgrid.json\",\n      data: item\n    });\n  },\n  countries: [{\n    Name: \"\",\n    Id: 0\n  }, {\n    Name: \"United States\",\n    Id: 1\n  }, {\n    Name: \"Canada\",\n    Id: 2\n  }, {\n    Name: \"United Kingdom\",\n    Id: 3\n  }, {\n    Name: \"France\",\n    Id: 4\n  }, {\n    Name: \"Brazil\",\n    Id: 5\n  }, {\n    Name: \"China\",\n    Id: 6\n  }, {\n    Name: \"Russia\",\n    Id: 7\n  }]\n};\n\n// Custom code\n!function ($) {\n  \"use strict\";\n\n  var GridApp = function GridApp() {\n    this.$body = $(\"body\");\n  };\n  GridApp.prototype.createGrid = function ($element, options) {\n    //default options\n    var defaults = {\n      height: \"550\",\n      width: \"100%\",\n      filtering: true,\n      editing: true,\n      inserting: true,\n      sorting: true,\n      paging: true,\n      autoload: true,\n      pageSize: 10,\n      pageButtonCount: 5,\n      deleteConfirm: \"Do you really want to delete the entry?\"\n    };\n    $element.jsGrid($.extend(defaults, options));\n  }, GridApp.prototype.init = function () {\n    var $this = this;\n    var options = {\n      fields: [{\n        name: \"Name\",\n        type: \"text\",\n        width: 150\n      }, {\n        name: \"Age\",\n        type: \"number\",\n        width: 50\n      }, {\n        name: \"Address\",\n        type: \"text\",\n        width: 200\n      }, {\n        name: \"Country\",\n        type: \"select\",\n        items: JsDBSource.countries,\n        valueField: \"Id\",\n        textField: \"Name\"\n      }, {\n        type: \"control\"\n      }],\n      controller: JsDBSource\n    };\n    $this.createGrid($(\"#jsGrid\"), options);\n  },\n  //init ChatApp\n  $.GridApp = new GridApp(), $.GridApp.Constructor = GridApp;\n}(window.jQuery),\n//initializing main application module\nfunction ($) {\n  \"use strict\";\n\n  $.GridApp.init();\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/jsgrid.init.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/jsgrid.init.js"]();
/******/ 	
/******/ })()
;