/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/jquery.todo.js":
/*!*******************************************!*\
  !*** ./resources/js/pages/jquery.todo.js ***!
  \*******************************************/
/***/ (() => {

eval("/*\r\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\r\nAuthor: CoderThemes\r\nWebsite: https://coderthemes.com/\r\nContact: support@coderthemes.com\r\nFile: Todo init js\r\n*/\n\n!function ($) {\n  \"use strict\";\n\n  var TodoApp = function TodoApp() {\n    this.$body = $(\"body\"), this.$todoContainer = $('#todo-container'), this.$todoMessage = $(\"#todo-message\"), this.$todoRemaining = $(\"#todo-remaining\"), this.$todoTotal = $(\"#todo-total\"), this.$archiveBtn = $(\"#btn-archive\"), this.$todoList = $(\"#todo-list\"), this.$todoDonechk = \".todo-done\", this.$todoForm = $(\"#todo-form\"), this.$todoInput = $(\"#todo-input-text\"), this.$todoBtn = $(\"#todo-btn-submit\"), this.$todoData = [{\n      'id': '1',\n      'text': 'Design One page theme',\n      'done': false\n    }, {\n      'id': '2',\n      'text': 'Build a js based app',\n      'done': true\n    }, {\n      'id': '3',\n      'text': 'Creating component page',\n      'done': true\n    }, {\n      'id': '4',\n      'text': 'Testing??',\n      'done': true\n    }, {\n      'id': '5',\n      'text': 'Hehe!! This looks cool!',\n      'done': false\n    }, {\n      'id': '6',\n      'text': 'Create new version 3.0',\n      'done': false\n    }, {\n      'id': '7',\n      'text': 'Build an angular app',\n      'done': true\n    }, {\n      'id': '8',\n      'text': 'Vue Admin & Dashboard  ',\n      'done': false\n    }];\n    this.$todoCompletedData = [];\n    this.$todoUnCompletedData = [];\n  };\n\n  //mark/unmark - you can use ajax to save data on server side\n  TodoApp.prototype.markTodo = function (todoId, complete) {\n    for (var count = 0; count < this.$todoData.length; count++) {\n      if (this.$todoData[count].id == todoId) {\n        this.$todoData[count].done = complete;\n      }\n    }\n  },\n  //adds new todo\n  TodoApp.prototype.addTodo = function (todoText) {\n    this.$todoData.push({\n      'id': this.$todoData.length,\n      'text': todoText,\n      'done': false\n    });\n    //regenerate list\n    this.generate();\n  },\n  //Archives the completed todos\n  TodoApp.prototype.archives = function () {\n    this.$todoUnCompletedData = [];\n    for (var count = 0; count < this.$todoData.length; count++) {\n      //geretaing html\n      var todoItem = this.$todoData[count];\n      if (todoItem.done == true) {\n        this.$todoCompletedData.push(todoItem);\n      } else {\n        this.$todoUnCompletedData.push(todoItem);\n      }\n    }\n    this.$todoData = [];\n    this.$todoData = [].concat(this.$todoUnCompletedData);\n    //regenerate todo list\n    this.generate();\n  },\n  //Generates todos\n  TodoApp.prototype.generate = function () {\n    //clear list\n    this.$todoList.html(\"\");\n    var remaining = 0;\n    for (var count = 0; count < this.$todoData.length; count++) {\n      //geretaing html\n      var todoItem = this.$todoData[count];\n      if (todoItem.done == true) this.$todoList.prepend('<li class=\"list-group-item border-0 pl-0\"><div class=\"custom-control custom-checkbox\"><input type=\"checkbox\" class=\"custom-control-input todo-done\" id=\"' + todoItem.id + '\" checked><label class=\"custom-control-label\" for=\"' + todoItem.id + '\"><s>' + todoItem.text + '</s></label></div></li>');else {\n        remaining = remaining + 1;\n        this.$todoList.prepend('<li class=\"list-group-item border-0 pl-0\"><div class=\"custom-control custom-checkbox\"><input type=\"checkbox\" class=\"custom-control-input todo-done\" id=\"' + todoItem.id + '\"><label class=\"custom-control-label\" for=\"' + todoItem.id + '\">' + todoItem.text + '</label></div></li>');\n      }\n    }\n\n    //set total in ui\n    this.$todoTotal.text(this.$todoData.length);\n    //set remaining\n    this.$todoRemaining.text(remaining);\n  },\n  //init todo app\n  TodoApp.prototype.init = function () {\n    var $this = this;\n    //generating todo list\n    this.generate();\n\n    //binding archive\n    this.$archiveBtn.on(\"click\", function (e) {\n      e.preventDefault();\n      $this.archives();\n      return false;\n    });\n\n    //binding todo done chk\n    $(document).on(\"change\", this.$todoDonechk, function () {\n      if (this.checked) $this.markTodo($(this).attr('id'), true);else $this.markTodo($(this).attr('id'), false);\n      //regenerate list\n      $this.generate();\n    });\n\n    //binding the new todo button\n    this.$todoForm.on(\"submit\", function (e) {\n      e.preventDefault();\n      if ($this.$todoInput.val() == \"\" || typeof $this.$todoInput.val() == 'undefined' || $this.$todoInput.val() == null) {\n        $this.$todoInput.focus();\n        return false;\n      } else {\n        $this.addTodo($this.$todoInput.val());\n        $this.$todoInput.val(\"\");\n        $this.$todoForm.removeClass('was-validated');\n        setTimeout(function () {\n          $this.$todoForm.removeClass('was-validated');\n        });\n        return true;\n      }\n    });\n  },\n  //init TodoApp\n  $.TodoApp = new TodoApp(), $.TodoApp.Constructor = TodoApp;\n}(window.jQuery),\n//initializing todo app\nfunction ($) {\n  \"use strict\";\n\n  $.TodoApp.init();\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/jquery.todo.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/jquery.todo.js"]();
/******/ 	
/******/ })()
;