/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./resources/js/pages/project-details.init.js":
/*!****************************************************!*\
  !*** ./resources/js/pages/project-details.init.js ***!
  \****************************************************/
/***/ (() => {

eval("/*\r\nTemplate Name: Ubold - Responsive Bootstrap 4 Admin Dashboard\r\nAuthor: CoderThemes\r\nWebsite: https://coderthemes.com/\r\nContact: support@coderthemes.com\r\nFile: Project Detail init js\r\n*/\n\n!function ($) {\n  \"use strict\";\n\n  var ChartJs = function ChartJs() {\n    this.$body = $(\"body\"), this.charts = [];\n  };\n  ChartJs.prototype.respChart = function (selector, type, data, options) {\n    var draw = Chart.controllers.line.prototype.draw;\n    Chart.controllers.line.prototype.draw = function () {\n      draw.apply(this, arguments);\n      var ctx = this.chart.chart.ctx;\n      var _stroke = ctx.stroke;\n      ctx.stroke = function () {\n        ctx.save();\n        ctx.shadowColor = 'rgba(0,0,0,0.01)';\n        ctx.shadowBlur = 20;\n        ctx.shadowOffsetX = 0;\n        ctx.shadowOffsetY = 5;\n        _stroke.apply(this, arguments);\n        ctx.restore();\n      };\n    };\n\n    //default config\n    Chart.defaults.global.defaultFontColor = \"#8391a2\";\n    Chart.defaults.scale.gridLines.color = \"#8391a2\";\n\n    // get selector by context\n    var ctx = selector.get(0).getContext(\"2d\");\n    // pointing parent container to make chart js inherit its width\n    var container = $(selector).parent();\n\n    // this function produce the responsive Chart JS\n    function generateChart() {\n      // make chart width fit with its container\n      var ww = selector.attr('width', $(container).width());\n      var chart;\n      switch (type) {\n        case 'Line':\n          chart = new Chart(ctx, {\n            type: 'line',\n            data: data,\n            options: options\n          });\n          break;\n        case 'Doughnut':\n          chart = new Chart(ctx, {\n            type: 'doughnut',\n            data: data,\n            options: options\n          });\n          break;\n        case 'Pie':\n          chart = new Chart(ctx, {\n            type: 'pie',\n            data: data,\n            options: options\n          });\n          break;\n        case 'Bar':\n          chart = new Chart(ctx, {\n            type: 'bar',\n            data: data,\n            options: options\n          });\n          break;\n        case 'Radar':\n          chart = new Chart(ctx, {\n            type: 'radar',\n            data: data,\n            options: options\n          });\n          break;\n        case 'PolarArea':\n          chart = new Chart(ctx, {\n            data: data,\n            type: 'polarArea',\n            options: options\n          });\n          break;\n      }\n      return chart;\n    }\n    ;\n    // run function - render chart at first load\n    return generateChart();\n  },\n  // init various charts and returns\n  ChartJs.prototype.initCharts = function () {\n    var charts = [];\n    if ($('#line-chart-example').length > 0) {\n      var lineChart = {\n        labels: [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"],\n        datasets: [{\n          label: \"Completed Tasks\",\n          backgroundColor: 'rgba(74, 129, 212, 0.3)',\n          borderColor: '#4a81d4',\n          data: [32, 42, 42, 62, 52, 75, 62]\n        }, {\n          label: \"Plan Tasks\",\n          fill: true,\n          backgroundColor: 'transparent',\n          borderColor: \"#f1556c\",\n          borderDash: [5, 5],\n          data: [42, 58, 66, 93, 82, 105, 92]\n        }]\n      };\n      var lineOpts = {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        tooltips: {\n          intersect: false\n        },\n        hover: {\n          intersect: true\n        },\n        plugins: {\n          filler: {\n            propagate: false\n          }\n        },\n        scales: {\n          xAxes: [{\n            reverse: true,\n            gridLines: {\n              color: \"rgba(0,0,0,0.05)\"\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              stepSize: 20\n            },\n            display: true,\n            borderDash: [5, 5],\n            gridLines: {\n              color: \"rgba(0,0,0,0)\",\n              fontColor: '#fff'\n            }\n          }]\n        }\n      };\n      charts.push(this.respChart($(\"#line-chart-example\"), 'Line', lineChart, lineOpts));\n    }\n    return charts;\n  },\n  //initializing various components and plugins\n  ChartJs.prototype.init = function () {\n    var $this = this;\n    // font\n    Chart.defaults.global.defaultFontFamily = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif';\n\n    // init charts\n    $this.charts = this.initCharts();\n\n    // enable resizing matter\n    $(window).on('resize', function (e) {\n      $.each($this.charts, function (index, chart) {\n        try {\n          chart.destroy();\n        } catch (err) {}\n      });\n      $this.charts = $this.initCharts();\n    });\n  },\n  //init flotchart\n  $.ChartJs = new ChartJs(), $.ChartJs.Constructor = ChartJs;\n}(window.jQuery),\n//initializing ChartJs\nfunction ($) {\n  \"use strict\";\n\n  $.ChartJs.init();\n}(window.jQuery);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/pages/project-details.init.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./resources/js/pages/project-details.init.js"]();
/******/ 	
/******/ })()
;